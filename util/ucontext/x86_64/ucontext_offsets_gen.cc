// Copyright 2022 The SiliFuzz Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.)

#include <ios>
#include <iostream>

#include "./util/ucontext/ucontext_types.h"

using UContext = silifuzz::UContext<silifuzz::X86_64>;

int main() {
  std::cout << R"(// Copyright 2022 The SiliFuzz Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.)"
            << std::endl
            << std::endl;
  std::cout
      << "// Automatically generated by ucontext_offsets_gen.cc, do not change"
      << std::endl;
  std::cout
      << "#ifndef THIRD_PARTY_SILIFUZZ_UTIL_UCONTEXT_X86_64_UCONTEXT_OFFSETS_H_"
      << std::endl;
  std::cout
      << "#define THIRD_PARTY_SILIFUZZ_UTIL_UCONTEXT_X86_64_UCONTEXT_OFFSETS_H_"
      << std::endl;
  std::cout << "#define UCONTEXT_FPREGS_OFFSET 0x" << std::hex
            << offsetof(UContext, fpregs) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_R8_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.r8) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_R9_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.r9) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_R10_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.r10) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_R11_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.r11) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_R12_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.r12) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_R13_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.r13) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_R14_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.r14) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_R15_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.r15) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RAX_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rax) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RBX_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rbx) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RCX_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rcx) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RDX_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rdx) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RBP_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rbp) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RSP_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rsp) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RSI_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rsi) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RDI_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rdi) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_RIP_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.rip) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_EFLAGS_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.eflags) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_FS_BASE_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.fs_base) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_GS_BASE_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.gs_base) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_CS_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.cs) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_SS_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.ss) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_FS_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.fs) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_GS_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.gs) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_ES_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.es) << std::endl;
  std::cout << "#define UCONTEXT_GREGS_DS_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs.ds) << std::endl;
  std::cout << "#endif  // "
               "THIRD_PARTY_SILIFUZZ_UTIL_UCONTEXT_X86_64_UCONTEXT_OFFSETS_H_"
            << std::endl;
}
